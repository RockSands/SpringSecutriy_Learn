<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.mapper.UserMapper">

	<resultMap type="com.model.User" id="userWithRolesMap">
		<id column="uid" property="uid" />
		<result column="username" property="username" />
		<result column="password" property="password" />
		<result column="name" property="name" />
		<result column="id_card_num" property="id_card_num" />
		<result column="state" property="state" />
		<collection property="roles" javaType="java.util.Set"
			ofType="com.model.Role">
			<id column="rid" property="id" />
			<result column="role" property="role" />
			<result column="description" property="description" />
			<result column="available" property="available" />
			<collection property="permissions" javaType="java.util.Set"
				ofType="com.model.Permission">
				<id column="pid" property="id" />
				<result column="parent_id" property="parent_id" />
				<result column="parent_ids" property="parent_ids" />
				<result column="permission" property="permission" />
				<result column="resource_type" property="resource_type" />
				<result column="url" property="url" />
				<result column="name" property="name" />
				<result column="available" property="available" />
			</collection>
		</collection>
	</resultMap>

	<!-- 查询用户信息 -->
	<select id="findByUserName" resultMap="userWithRolesMap">
		SELECT
			u.*,
			r.id rid,
			r.description,
			r.available,
			r.role,
			p.id pid,
			p.`name` pname,
			p.url,
			p.resource_type,
			p.permission,
			p.parent_ids,
			p.parent_id,
			p.available 
		FROM
			user_info u,
			user_role ur,
			role r,
			role_permission rp,
			permission p 
		WHERE
			u.uid = ur.uid 
			AND ur.role_id = r.id 
			AND r.id = rp.role_id 
			AND rp.permission_id = p.id
			AND u.username = #{username}
	</select>

	<!-- 添加用户 -->
	<!-- 创建用户 -->
	<insert id="insert" parameterType="com.model.User">
		<selectKey resultType="java.lang.Integer" keyProperty="uid"
			order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into user_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				uid,
			</if>
			<if test="username != null and username != ''">
				username,
			</if>
			<if test="password != null and password != ''">
				password,
			</if>
			<if test="name != null and name != ''">
				`name`,
			</if>
			<if test="id_card_num != null and id_card_num != ''">
				id_card_num,
			</if>
			<if test="state != null and state != ''">
				state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				#{uid},
			</if>
			<if test="username != null and username != ''">
				#{username},
			</if>
			<if test="password != null and password != ''">
				#{password},
			</if>
			<if test="name != null and name != ''">
				#{name},
			</if>
			<if test="id_card_num != null and id_card_num != ''">
				#{id_card_num},
			</if>
			<if test="state != null and state != ''">
				#{state},
			</if>
		</trim>
	</insert>

	<update id="update" parameterType="com.model.User">
		update user_info set state =
		#{state} where uid = #{uid}
	</update>

	<insert id="insertRoles" parameterType="com.model.User">
		insert into user_role values
		<foreach collection="roles" item="role">
			(#{uid},#{role.id})
		</foreach>
	</insert>

	<!-- 删除用户 -->
	<delete id="del">
		DELETE FROM user_info WHERE uid = #{uid}
	</delete>

	<!-- 删除用户角色 -->
	<delete id="delUserRole">
		DELETE FROM user_role WHERE uid = #{uid}
	</delete>
</mapper>